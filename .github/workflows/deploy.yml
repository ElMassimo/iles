name: deploy

on:
  push:
    branches:
      - main

jobs:
  docs:
    if: (! git diff --quiet 'HEAD^' HEAD docs) || ${{ contains(github.event.head_commit.message, 'docs') }}
    name: docs
    env:
      BUILD_HOOK: ${{secrets.NETLIFY_DOCS_BUILD_HOOK}}
    runs-on: ubuntu-latest
    steps:
      - name: Netlify
        run: 'curl -X POST -d {} $BUILD_HOOK'

  blog:
    if: (! git diff --quiet 'HEAD^' HEAD playground/the-vue-point) || ${{ contains(github.event.head_commit.message, 'blog') }}
    name: the-vue-point
    env:
      BUILD_HOOK: ${{secrets.NETLIFY_VUE_POINT_BUILD_HOOK}}
    runs-on: ubuntu-latest
    steps:
      - name: Netlify
        run: 'curl -X POST -d {} $BUILD_HOOK'

  crawl:
    if: (! git diff --quiet 'HEAD^' HEAD docs) || ${{ contains(github.event.head_commit.message, 'docs') }} || startsWith(github.event.head_commit.message, 'crawl') }}
    name: crawl
    env:
      API_KEY: ${{secrets.ALGOLIA_API_KEY}}
      APPLICATION_ID: GERZE019PN
    runs-on: ubuntu-latest
    container: algolia/docsearch-scraper
    steps:
      - name: Wait for Netlify deployment
        uses: whatnick/wait-action@master
        with:
          time: '90s'
      - uses: actions/checkout@v2
      - run: 'sudo apt-get install -y jq'
      - run: 'echo "CONFIG=$(cat docs/.algolia/config.json | jq -r tostring)" >> $GITHUB_ENV'
      - run: "cd /root && pipenv install"
      - run: "cd /root && pipenv run python -m src.index"

